import streamlit as st
from langchain.agents import initialize_agent, Tool
from langchain.llms import OpenAI
from langchain.agents.agent_types import AgentType

# Fonction simul√©e pour r√©pondre √† des questions r√©glementaires
def urssaf_info(question: str) -> str:
    faq = {
        "assiette sociale": "Depuis 2025, l'assiette sociale est simplifi√©e : elle correspond au revenu brut diminu√© d‚Äôun abattement de 26 %, sans d√©duction des cotisations sociales.",
        "cotisation retraite": "La part de la cotisation retraite augmente pour am√©liorer les droits des ind√©pendants.",
        "attestation de vigilance": "Elle est obligatoire pour tout contrat sup√©rieur √† 5 000 ‚Ç¨ HT, √† fournir tous les 6 mois.",
        "acre": "L'ACRE permet une exon√©ration partielle de d√©but d'activit√© pour les auto-entrepreneurs.",
        "d√©claration": "Les auto-entrepreneurs doivent d√©clarer leur chiffre d'affaires mensuellement ou trimestriellement sur autoentrepreneur.urssaf.fr.",
        "arnaque": "Attention aux faux courriers et aux arnaques : l'Urssaf ne demande jamais de paiement par email ou SMS."
    }
    for mot_cl√©, r√©ponse in faq.items():
        if mot_cl√© in question.lower():
            return r√©ponse
    return "Je vous recommande de consulter le site officiel de l'Urssaf ou de contacter un conseiller pour cette question sp√©cifique."

# D√©finir l'outil
outil_urssaf = Tool(
    name="InfoUrssaf",
    func=urssaf_info,
    description="R√©pond aux questions sur les r√®gles Urssaf pour les auto-entrepreneurs et ind√©pendants."
)

# Initialiser le mod√®le
llm = OpenAI(temperature=0)

# Cr√©er l‚Äôagent
agent = initialize_agent(
    tools=[outil_urssaf],
    llm=llm,
    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,
    verbose=False
)

# Interface Streamlit
st.set_page_config(page_title="Agent IA Urssaf", page_icon="üìÑ")
st.title("ü§ñ Agent IA Urssaf")
st.write("Posez une question sur les r√®gles Urssaf pour les auto-entrepreneurs et travailleurs ind√©pendants.")

question = st.text_input("Votre question :")

if question:
    with st.spinner("L'agent r√©fl√©chit..."):
        reponse = agent.run(question)
        st.success(reponse)
